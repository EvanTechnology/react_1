{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","div","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.141befbe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext }from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles ={\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes =[]\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n    <li style={styles.li}>\r\n        <span className={classes.join(' ')}>\r\n            <input \r\n                type= \"checkbox\" \r\n                checked= {todo.completed}\r\n                style={styles.input} \r\n                onChange={() => onChange(todo.id)}\r\n            />\r\n            <strong>{index + 1}</strong>\r\n            &nbsp;\r\n            {todo.title}\r\n        </span>\r\n\r\n        <button \r\n            className=\"rm\"\r\n            onClick={removeTodo.bind(null, todo.id)}>\r\n            &times;\r\n        </button>\r\n    </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index:PropTypes.number,\r\n    onChange:PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 50\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => {\r\n                return <TodoItem \r\n                            todo={todo} \r\n                            key={todo.id} \r\n                            index={index}\r\n                            onChange={props.onToggle}\r\n                        />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n// Validation props. It has to be array of objects\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\n\r\nexport default () => <div style= {{display:'flex', justifyContent: 'center', margin: '.5rem'}}><div className=\"lds-ripple\"><div></div><div></div></div></div>","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                onClick={() => this.setState({isOpen: true})}>\r\n                    Open Modal</button>\r\n                {this.state.isOpen && (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal-body\">\r\n                            <h1>Modal Title</h1>\r\n                            <p>I'm a modal</p>\r\n                            <button\r\n                            onClick={() => this.setState({isOpen: false})}>\r\n                                Close</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import TodoList from './Todo/TodoList'\nimport React, { useEffect } from 'react'\nimport Context from './context'\nimport Loader from './loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy(() => import('./Todo/AddTodo'))\n\nfunction App() {\n  /* const [todos, setTodos] = React.useState([\n    {id: 1, completed: false, title: 'Wash dishes'},\n    {id: 2, completed: false, title: 'Make a cake'},\n    {id: 3, completed: false, title: 'Buy a coffee'},\n  ]) */\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n    .then(response => response.json())\n    .then(todos => {\n      setTimeout(() =>{\n        setTodos(todos)\n        setLoading(false)\n      }, 2000)\n    })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n      return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([\n      {\n      title,\n      id: Date.now(),\n      completed: false\n      }\n    ]))\n  }\n\n  return (\n   <Context.Provider value={ {removeTodo }}>\n     <div div className=\"wrapper\">\n       <h1>React tutorial</h1>\n       <Modal />\n       <React.Suspense fallback={<p>Loading...</p>}>\n         <AddTodo \n          onCreate={addTodo}\n         />\n       </React.Suspense>\n       {loading && <Loader />}\n       {\n         todos.length ? \n        <TodoList \n          todos={todos}\n          onToggle={toggleTodo}\n        />\n        : loading ? null : <p>Enjoy your free time</p>\n      }\n     </div>\n   </Context.Provider>\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}